/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/api/recap": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": unknown;
					};
				};
				403: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							statusCode: number;
						};
					};
				};
				422: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example false */
							success: boolean;
							error: {
								issues: {
									code: string;
									path: (string | number)[];
									message?: string;
								}[];
								name: string;
							};
							statusCode: number;
						};
					};
				};
				500: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							statusCode: number;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/api/chat": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						messages: unknown[];
					};
				};
			};
			responses: {
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": unknown;
					};
				};
				403: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							statusCode: number;
						};
					};
				};
				422: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example false */
							success: boolean;
							error: {
								issues: {
									code: string;
									path: (string | number)[];
									message?: string;
								}[];
								name: string;
							};
							statusCode: number;
						};
					};
				};
				500: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							statusCode: number;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/api/github-status": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							connected: boolean;
							username?: string;
						};
					};
				};
				403: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							statusCode: number;
						};
					};
				};
				422: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example false */
							success: boolean;
							error: {
								issues: {
									code: string;
									path: (string | number)[];
									message?: string;
								}[];
								name: string;
							};
							statusCode: number;
						};
					};
				};
				500: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							statusCode: number;
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: never;
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
